#!/usr/bin/env python

# Copyright 2006 Andrey Golovizin
#
# This file is part of pybtex.
#
# pybtex is free software; you can redistribute it and/or modify
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# pybtex is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rdiff-backup; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

import sys
import optparse
from pybtex import __version__
from pybtex.database.convert import convert, ConvertError

def main():
    opt_parser = optparse.OptionParser(prog='pybtex-convert', usage='%prog filename -f from_format -t to_format [options]', version='%%prog-%s' % __version__)
    opt_parser.add_option('-f', '--from', action='store', type='string', dest='from_format')
    opt_parser.add_option('-t', '--to', action='store', type='string', dest='to_format')
    opt_parser.add_option('-o', '--output-filename', action='store', type='string', dest='output')
    encoding = opt_parser.add_option_group('encoding options')
    encoding.add_option('--input-encoding', action='store', type='string', dest='input_encoding')
    encoding.add_option('--output-encoding', action='store', type='string', dest='output_encoding')

    (options, args) = opt_parser.parse_args()

    if not args:
        opt_parser.print_help()
        sys.exit(1)

    if not options.from_format:
        opt_parser.error('source format not specified')
    
    if not options.to_format:
        opt_parser.error('destination format not specified')

    try:
        convert(args[0],
                options.from_format,
                options.to_format,
                output=options.output,
                input_encoding=options.input_encoding,
                output_encoding=options.output_encoding)
    except ConvertError, s:
        opt_parser.error(s)

if __name__ == '__main__':
    main()
